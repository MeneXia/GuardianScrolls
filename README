GuardianScrolls Alpha Changelog:
GMT+8 HK/MNL Based Time

RULES FOR VERSION CONTROL ALPHA:
Version format follows this: MajorRelease.MinorRelease.Build
Each new scroll ability added = +1 to MinorRelease
Each scroll ability fix = +1 to Build, varies on difficulty of fix
Any significant progress = +1 to MinorRelease

12/19/11 11:45AM - v0.1
- Added GSThieving, and Core
- Deprecation on GSThieving (updateinventory)
- Core code contains recipes for Mage and Warrior Scrolls, not included yet

12/21/11 12:23AM - v0.22
- Added skeletal CommandExecutor framework in Core
- Added HashMaps in Core, will need to move CommandExecutor framework to other plugins
- Added optional Spout features (not included in config yet!)
- Added GSSpoutInventoryListener in Core to further improve unstackability of paper

COMMAND ADDITIONS:
- Using "/guardianscrolls" or "/gs" shows help
- Using "/guardianscrolls use" or "/gs use" reads one scroll and places the usage count (from config) into the skill's HashMap
- Using "/guardianscrolls use <number>" or "/gs use <number>" reads an amount of scrolls specified by the number, and places the usage count as well.
With this command, you cannot read more than 64 scrolls at once (you cannot read what's not on your hand).

TODO: - config.yml in Core needs extra additions and cleanup
- config.yml in Core's recipes only works if all items are present
- plugin.yml in Core needs cleanup
- skills.yml in Core needs re-planning
- Add HashMap saving and loading!
- GSThieving needs cleanup and additions for CommandExecutor framework
- GSThieving needs proper permissions
- CommandExecutor framework needs proper messages
- Add a "/gs read function," or when item is switched, send a message of the scroll name
- Add a "/gs equip function" to set an active scroll
- Add admin command controls

12/29/11 6:30PM - v0.3.1
- Changed version rules
- Changed layout of projects, will now fall into one project in Eclipse
- Each plugin will have its own source folder in the master folder
- Cleaned config.yml in Core
- Added USE_SPOUT_FEATURES in GENERAL_OPTIONS of Core's config.yml
- Fixed RecipeManager: if you want a slot empty, set the letter in config to 0. Will throw errors if you leave it blank.
- Cleaned plugin.yml in Core, permissions for GSThieving were added
- Disabled PickPocketTool and LoseToolOnFail in code, but they are on Core's skill.yml
- Scratched the idea of each plugin having its own CommandExecutor framework. Instead, a referencing framework of HashMaps are in the Core's CommandExecutor
- Added HashMap saving and loading (ALPHA) probably needs extreme bug testing. Data for scrolls are saved in binary format in the file "scrolls.dat" in the Core's data folder

TODO: - General code cleanup
- CommandExecutor framework in Core needs proper messages
- Add a "/gs read function," or when item is switched, send a message of the scroll name
- Add a "/gs equip function" to set an active scroll
- Add admin command controls

Possible CommandLess functionality idea:
"Right Click" uses a scroll
"Right Click" a player to read scroll to him - prevents scamming
"Left Click" a player to give scroll to him
Add another recipe - "ScrollTracker"
"Left Click" using ScrollTracker in order to see which scrolls you currently have
"Right Click" using ScrollTracker to cycle scroll usage

12/29/11 8:23PM - v0.3.2
- Inputted correct version number in Core's plugin.yml
- Revised README